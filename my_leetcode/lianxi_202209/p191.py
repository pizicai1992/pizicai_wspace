# -*- coding: utf-8 -*-

# 编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为汉明重量）。
# 输入：00000000000000000000000000001011
# 输出：3
# 解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。

# 思路：
# 使用二进制中的位运算“与”，运算符号是 & ,意思是：如果两个相应位都为1,则该位的结果为1,否则为0。
# 如果传入的二进制数对应的十进制数是 n 的话，那么计算 n & (n-1) 的值，这个结果对应的二进制数，正好“消去”
# 了原先数字的最右边的 1 ，接下来对这个计算结果重复与它的-1的值进行位与运算，直到最后结果=0停下来，那么计算的
# 次数就是原先二进制数的1的个数，因为每次计算都会消去最右边的1

def count_one(num):
    result = 0 # 计算次数，也就是1的个数 
    while num > 0:
        num = num & (num-1) # 二进制位与运算，每次这样做都会消去最右边的1
        result = result + 1
    
    return num

